--------------------------Tablas-----------------------------------------------
CREATE TABLE USUARIOS(
NOMBRE VARCHAR2(30) NOT NULL,
CORREO VARCHAR2(50) NOT NULL,
APODO VARCHAR2(30) NOT NULL,
FECHANACI DATE NOT NULL,
APELLIDO VARCHAR2(30) NOT NULL,
CONTRASEÑA VARCHAR2(30) NOT NULL,
FECHAREG DATE NOT NULL);

CREATE TABLE CONSULTAS(
ID NUMBER(5) NOT NULL,
FECHA DATE NOT NULL,
APODO VARCHAR2(30) NOT NULL);

CREATE TABLE CVIDEOJUEGOS(
CON_ID NUMBER(5) NOT NULL,
VID_ID NUMBER(5) NOT NULL);

CREATE TABLE CCOMPETENCIAS(
CON_ID NUMBER(5) NOT NULL,
COM_ID NUMBER(5) NOT NULL);

CREATE TABLE CEQUIPOS(
CON_ID NUMBER(5) NOT NULL,
EQUI_ID VARCHAR2(50) NOT NULL);

CREATE TABLE VIDEOJUEGOS(
ID NUMBER(5) NOT NULL,
NOMBRE VARCHAR2(30) NOT NULL,
CLASIFICACION VARCHAR2(15) NOT NULL,
LANZAMIENTO DATE NOT NULL,
ID_FRAN NUMBER(5) NOT NULL);

CREATE TABLE DISTRIBUIDORES(
ID_VID NUMBER(5) NOT NULL,
DISTRI VARCHAR(50) NOT NULL);

CREATE TABLE CATEGORIAS(
ID_GEN NUMBER(5) NOT NULL,
ID_VID NUMBER(5) NOT NULL);

CREATE TABLE GENEROS(
ID NUMBER(5) NOT NULL,
NOMBREGENE VARCHAR2(30) NOT NULL);

CREATE TABLE CREADOS(
ID_COM NUMBER(5) NOT NULL,
ID_VID NUMBER(5) NOT NULL);

CREATE TABLE COMPANIAS(
ID NUMBER(5) NOT NULL,
NOMBRECOMP VARCHAR2(30) NOT NULL,
FUNDACION DATE NOT NULL,
SITIOWEB VARCHAR2(50) NOT NULL);

CREATE TABLE DISPONIBLES(
ID_PLAT NUMBER(5) NOT NULL,
ID_VID NUMBER(5) NOT NULL);

CREATE TABLE PLATAFORMAS(
ID NUMBER(5) NOT NULL,
NOMBREPLAT VARCHAR2(30));

CREATE TABLE FRANQUICIAS(
ID NUMBER(5) NOT NULL,
NOMBRE VARCHAR2(80) NOT NULL,
FECHA DATE NOT NULL);

CREATE TABLE RELACIONADOS(
ID_VID1 NUMBER(5) NOT NULL,
ID_VID2 NUMBER(5) NOT NULL,
CRONOLOGIA VARCHAR2(30));

CREATE TABLE COMPETENCIAS(
ID NUMBER(5) NOT NULL,
LUGAR VARCHAR2(80) NOT NULL,
INICIO DATE NOT NULL,
REGION VARCHAR2(50) NOT NULL,
NOMBRE VARCHAR2(80) NOT NULL,
FECHA_G DATE NOT NULL,
ID_VID NUMBER(5) NOT NULL,
ID_EQUI VARCHAR2(50),
RESULTADO VARCHAR2(10));

CREATE TABLE PARTICIPANTES(
ID_COM NUMBER(5) NOT NULL,
ID_EQUI VARCHAR2(50) NOT NULL);

CREATE TABLE EQUIPOS(
NOMBRE VARCHAR2(50) NOT NULL,
FUNDACION DATE NOT NULL,
REGION VARCHAR2(50) NOT NULL,
WEB VARCHAR(80) NOT NULL,
ID_COA NUMBER(5),
ESTADO CHAR(1) NOT NULL);

CREATE TABLE PATROCINIOS(
ID_PAT NUMBER(5) NOT NULL,
ID_EQUI VARCHAR2(50) NOT NULL);

CREATE TABLE PATROCINADORES(
ID NUMBER(5) NOT NULL,
NOMBRE VARCHAR2(30) NOT NULL,
WEB VARCHAR2(50) NOT NULL);

CREATE TABLE JUGADORES(
ID NUMBER(5) NOT NULL,
NOMBRE VARCHAR2(30) NOT NULL,
APELLIDO VARCHAR2(30) NOT NULL,
APODO VARCHAR2(30) NOT NULL,
EDAD NUMBER(2) NOT NULL,
NACIONALIDAD VARCHAR2(50) NOT NULL,
ACTIVO CHAR(1) NOT NULL,
ID_EQUI VARCHAR2(50),
INGRESO DATE NOT NULL);

CREATE TABLE EXJUGADORES(
ID_JUG NUMBER(5) NOT NULL,
ID_EQUI VARCHAR2(50) NOT NULL,
INGRESO_JUG DATE NOT NULL,
RETIRO_JUG DATE NOT NULL,
APODO_JUG VARCHAR2(50) NOT NULL);

CREATE TABLE COACHES(
ID NUMBER(5) NOT NULL,
NOMBRE VARCHAR2(30) NOT NULL,
APELLIDO VARCHAR2(30) NOT NULL,
EDAD NUMBER(2) NOT NULL,
APODO VARCHAR2(30) NOT NULL,
NACIONALIDAD VARCHAR(50) NOT NULL,
INGRESO DATE NOT NULL);

CREATE TABLE ROLES1(
JUGADOR_ID NUMBER(5) NOT NULL,
ROL VARCHAR(30));


--------------------------------XTablas-----------------------------------------
DROP TABLE USUARIOS;
DROP TABLE CONSULTAS;
DROP TABLE CVIDEOJUEGOS;
DROP TABLE CCOMPETENCIAS;
DROP TABLE CEQUIPOS;
DROP TABLE VIDEOJUEGOS;
DROP TABLE DISTRIBUIDORES;
DROP TABLE CATEGORIAS;
DROP TABLE GENEROS;
DROP TABLE CREADOS;
DROP TABLE COMPANIAS;
DROP TABLE DISPONIBLES;
DROP TABLE PLATAFORMAS;
DROP TABLE FRANQUICIAS;
DROP TABLE RELACIONADOS;
DROP TABLE COMPETENCIAS;
DROP TABLE PARTICIPANTES;
DROP TABLE EQUIPOS;
DROP TABLE PATROCINIOS;
DROP TABLE PATROCINADORES;
DROP TABLE JUGADORES;
DROP TABLE EXJUGADORES;
DROP TABLE COACHES;
DROP TABLE ROLES1;

--------------------------------Primarias---------------------------------------
ALTER TABLE USUARIOS ADD CONSTRAINT PK_USUARIOS PRIMARY KEY(APODO);
ALTER TABLE CONSULTAS ADD CONSTRAINT PK_CONSULTAS PRIMARY KEY(ID);
ALTER TABLE CVIDEOJUEGOS ADD CONSTRAINT PK_CVIDEOJUEGOS PRIMARY KEY(CON_ID,VID_ID);
ALTER TABLE CCOMPETENCIAS ADD CONSTRAINT PK_CCOMPETENCIAS PRIMARY KEY(CON_ID,COM_ID);
ALTER TABLE CEQUIPOS ADD CONSTRAINT PK_CEQUIPOS PRIMARY KEY(CON_ID,EQUI_ID);
ALTER TABLE VIDEOJUEGOS ADD CONSTRAINT PK_VIDEOJUEGOS PRIMARY KEY(ID);
ALTER TABLE DISTRIBUIDORES ADD CONSTRAINT PK_DISTRIBUIDORES PRIMARY KEY(ID_VID,DISTRI);
ALTER TABLE CATEGORIAS ADD CONSTRAINT PK_CATEGORIAS PRIMARY KEY(ID_GEN,ID_VID);
ALTER TABLE GENEROS ADD CONSTRAINT PK_GENEROS PRIMARY KEY(ID);
ALTER TABLE CREADOS ADD CONSTRAINT PK_CREADOS PRIMARY KEY(ID_COM,ID_VID);
ALTER TABLE COMPANIAS ADD CONSTRAINT PK_COMPANIAS PRIMARY KEY(ID);
ALTER TABLE DISPONIBLES ADD CONSTRAINT PK_DISPONIBLES PRIMARY KEY(ID_PLAT,ID_VID);
ALTER TABLE PLATAFORMAS ADD CONSTRAINT PK_PLATAFORMAS PRIMARY KEY(ID);
ALTER TABLE FRANQUICIAS ADD CONSTRAINT PK_FRANQUICIAS PRIMARY KEY(ID);
ALTER TABLE RELACIONADOS ADD CONSTRAINT PK_RELACIONADOS PRIMARY KEY(ID_VID1,ID_VID2);
ALTER TABLE COMPETENCIAS ADD CONSTRAINT PK_COMPETENCIAS PRIMARY KEY(ID);
ALTER TABLE PARTICIPANTES ADD CONSTRAINT PK_PARTICIPANTES PRIMARY KEY(ID_COM,ID_EQUI);
ALTER TABLE EQUIPOS ADD CONSTRAINT PK_EQUIPOS PRIMARY KEY(NOMBRE);
ALTER TABLE PATROCINIOS ADD CONSTRAINT PK_PATROCINIOS PRIMARY KEY(ID_PAT,ID_EQUI);
ALTER TABLE PATROCINADORES ADD CONSTRAINT PK_PATROCINADORES PRIMARY KEY(ID);
ALTER TABLE JUGADORES ADD CONSTRAINT PK_JUGADORES PRIMARY KEY(ID);
ALTER TABLE EXJUGADORES ADD CONSTRAINT PK_EXJUGADORES PRIMARY KEY(ID_JUG,ID_EQUI);
ALTER TABLE COACHES ADD CONSTRAINT PK_COACH PRIMARY KEY(ID);
ALTER TABLE ROLES1 ADD CONSTRAINT PK_ROLES1 PRIMARY KEY(JUGADOR_ID,ROL);

----------------------------Unicas----------------------------------------------
ALTER TABLE USUARIOS ADD CONSTRAINT UK_USUARIOS UNIQUE(CORREO);
ALTER TABLE COMPANIAS ADD CONSTRAINT UK_COMPANIAS UNIQUE(SITIOWEB);
ALTER TABLE EQUIPOS ADD CONSTRAINT UK_EQUIPOS UNIQUE(WEB);
ALTER TABLE PATROCINADORES ADD CONSTRAINT UK_PATROCINADORES UNIQUE(WEB);
ALTER TABLE JUGADORES ADD CONSTRAINT UK_JUGADORES UNIQUE(apodo);
ALTER TABLE COACHES ADD CONSTRAINT UK_COACHES UNIQUE(apodo);


----------------------------Foraneas--------------------------------------------


---------------------------------ACCIONES---------------------------------------
ALTER TABLE CONSULTAS ADD CONSTRAINT FK_CONSULTA_USUARIO FOREIGN KEY(APODO) REFERENCES USUARIOS(APODO) ON DELETE CASCADE;
ALTER TABLE CVIDEOJUEGOS ADD CONSTRAINT FK_CVIDEOJUEGOS_CONSULTAS FOREIGN KEY(CON_ID) REFERENCES CONSULTAS(ID) ON DELETE CASCADE;
ALTER TABLE CCOMPETENCIAS ADD CONSTRAINT FK_CCOMPETENCIAS_CONSULTAS FOREIGN KEY(CON_ID) REFERENCES CONSULTAS(ID) ON DELETE CASCADE;
ALTER TABLE CEQUIPOS ADD CONSTRAINT FK_CEQUIPOS_CONSULTAS FOREIGN KEY(CON_ID) REFERENCES CONSULTAS(ID) ON DELETE CASCADE;
--------------------------------------------------------------------------------



ALTER TABLE CVIDEOJUEGOS ADD CONSTRAINT FK_CVIDEOJUEGOS_VIDEOJUEGOS FOREIGN KEY(VID_ID) REFERENCES VIDEOJUEGOS(ID);
ALTER TABLE CCOMPETENCIAS ADD CONSTRAINT FK_CCOMPETENCIAS_COMPETENCIAS FOREIGN KEY(COM_ID) REFERENCES COMPETENCIAS(ID);
ALTER TABLE CEQUIPOS ADD CONSTRAINT FK_CEQUIPOS_EQUIPOS FOREIGN KEY(EQUI_ID) REFERENCES EQUIPOS(NOMBRE);

ALTER TABLE VIDEOJUEGOS ADD CONSTRAINT FK_VIDEOJUEGOS_FRANQUICIAS FOREIGN KEY(ID_FRAN) REFERENCES FRANQUICIAS(ID);
ALTER TABLE CREADOS ADD CONSTRAINT FK_CREADOS_VIDEOJUEGOS FOREIGN KEY(ID_VID) REFERENCES VIDEOJUEGOS(ID);
ALTER TABLE CREADOS ADD CONSTRAINT FK_CREADOS_COMPANIAS FOREIGN KEY(ID_COM) REFERENCES COMPANIAS(ID);
ALTER TABLE CATEGORIAS ADD CONSTRAINT FK_CATEGORIAS_VIDEOJUEGOS FOREIGN KEY(ID_VID) REFERENCES VIDEOJUEGOS(ID);
ALTER TABLE CATEGORIAS ADD CONSTRAINT FK_CATEGORIAS_GENEROS FOREIGN KEY(ID_GEN) REFERENCES GENEROS(ID);
ALTER TABLE RELACIONADOS ADD CONSTRAINT FK_RELACIONADOS_VIDEOJUEGOS FOREIGN KEY(ID_VID1) REFERENCES VIDEOJUEGOS(ID);
ALTER TABLE RELACIONADOS ADD CONSTRAINT FK_RELACIONADOS_VIDEOJUEGOS2 FOREIGN KEY(ID_VID2) REFERENCES VIDEOJUEGOS(ID);
ALTER TABLE DISPONIBLES ADD CONSTRAINT FK_DISPONIBLES_VIDEOJUEGOS FOREIGN KEY(ID_VID) REFERENCES VIDEOJUEGOS(ID);
ALTER TABLE DISPONIBLES ADD CONSTRAINT FK_DISPONIBLES_PLATAFORMAS FOREIGN KEY(ID_PLAT) REFERENCES PLATAFORMAS(ID);
ALTER TABLE COMPETENCIAS ADD CONSTRAINT FK_COMPETENCIAS_VIDEOJUEGOS FOREIGN KEY(ID_VID) REFERENCES VIDEOJUEGOS(ID);
ALTER TABLE COMPETENCIAS ADD CONSTRAINT FK_COMPETENCIAS_EQUIPOS FOREIGN KEY(ID_EQUI) REFERENCES EQUIPOS(NOMBRE);
ALTER TABLE PARTICIPANTES ADD CONSTRAINT FK_PARTICIPANTES_COMPETENCIAS FOREIGN KEY(ID_COM) REFERENCES COMPETENCIAS(ID);
ALTER TABLE PARTICIPANTES ADD CONSTRAINT FK_PARTICIPANTES_EQUIPOS FOREIGN KEY(ID_EQUI) REFERENCES EQUIPOS(NOMBRE);

ALTER TABLE EQUIPOS ADD CONSTRAINT FK_EQUIPOS_COACHES FOREIGN KEY(ID_COA) REFERENCES COACHES(ID);
ALTER TABLE EXJUGADORES ADD CONSTRAINT FK_EXJUGADORES_EQUIPOS FOREIGN KEY(ID_EQUI) REFERENCES EQUIPOS(NOMBRE);
ALTER TABLE EXJUGADORES ADD CONSTRAINT FK_EXJUGADORES_JUGADORES FOREIGN KEY(ID_JUG) REFERENCES JUGADORES(ID);
ALTER TABLE JUGADORES ADD CONSTRAINT FK_JUGADORES_EQUIPOS FOREIGN KEY(ID_EQUI) REFERENCES EQUIPOS(NOMBRE);
ALTER TABLE PATROCINIOS ADD CONSTRAINT FK_PATROCINIOS_EQUIPOS FOREIGN KEY(ID_EQUI) REFERENCES EQUIPOS(NOMBRE);
ALTER TABLE PATROCINIOS ADD CONSTRAINT FK_PATROCINIOS_PATROCINADORES FOREIGN KEY(ID_PAT) REFERENCES PATROCINADORES(ID);
ALTER TABLE ROLES1 ADD CONSTRAINT FK_ROLES1_JUGADORES FOREIGN KEY(JUGADOR_ID) REFERENCES JUGADORES(ID);

----------------------------Atributos-------------------------------------------
ALTER TABLE USUARIOS ADD CONSTRAINT CK_ROL CHECK(REGEXP_LIKE(nombre,'^[A-Za-z]+[ ]?[A-Za-z]+$') AND REGEXP_LIKE(apellido,'^[A-Za-z]+[ ]?[A-Za-z]+$'));
ALTER TABLE USUARIOS ADD CONSTRAINT CK_TCORREO CHECK(REGEXP_LIKE(correo,'^[^@]+@[^@]+$'));
ALTER TABLE COACHES ADD CONSTRAINT CK_ROL1 CHECK(REGEXP_LIKE(nombre,'^[A-Za-z]+[ ]?[A-Za-z]+$') AND REGEXP_LIKE(apellido,'^[A-Za-z]+[ ]?[A-Za-z]+$'));
ALTER TABLE ROLES1 ADD CONSTRAINT CK_ROL2 CHECK(REGEXP_LIKE(rol,'^[A-Za-z]+[ ]?[A-Za-z]+$'));
ALTER TABLE JUGADORES ADD CONSTRAINT CK_RO3 CHECK(REGEXP_LIKE(nombre,'^[A-Za-z]+[ ]?[A-Za-z]+$') AND REGEXP_LIKE(apellido,'^[A-Za-z]+[ ]?[A-Za-z]+$'));


ALTER TABLE VIDEOJUEGOS ADD CONSTRAINT CK_ESRB CHECK(clasificacion IN ('E','C','M','A'));
ALTER TABLE USUARIOS ADD CONSTRAINT CK_TCONTRASEÑA CHECK(LENGTH(contraseña)>5 AND REGEXP_LIKE(contraseña,'^[A-Za-z0-9]+$') AND REGEXP_COUNT(contraseña,'[A-Z]')>1);
ALTER TABLE RELACIONADOS ADD CONSTRAINT CK_TCRON CHECK(cronologia IN ('Precuela','Intercuela','Medicuela','Paracuela','Pseudosecuela','Retrocontinuación','Serie derivada'));

ALTER TABLE COMPANIAS ADD CONSTRAINT CK_TURL CHECK (REGEXP_COUNT(SITIOWEB,'\.')>1);
ALTER TABLE EQUIPOS ADD CONSTRAINT CK_TURL2 CHECK(REGEXP_COUNT(WEB,'\.')>1);
ALTER TABLE PATROCINADORES ADD CONSTRAINT CK_TURL3 CHECK(REGEXP_COUNT(WEB,'\.')>1);

-----------------------------------------XPoblar-----------------------------------------------------------
DELETE FROM DISPONIBLES;
DELETE FROM CEQUIPOS;
DELETE FROM CCOMPETENCIAS;
DELETE FROM ROLES1;
DELETE FROM PARTICIPANTES;
DELETE FROM COMPETENCIAS;
DELETE FROM PATROCINIOS;
DELETE FROM EXJUGADORES;
DELETE FROM JUGADORES;
DELETE FROM EQUIPOS;
DELETE FROM COACHES;
DELETE FROM RELACIONADOS;
DELETE FROM CATEGORIAS;
DELETE FROM CVIDEOJUEGOS;
DELETE FROM CREADOS;
DELETE FROM DISTRIBUIDORES;
DELETE FROM VIDEOJUEGOS;
DELETE FROM PLATAFORMAS;
DELETE FROM FRANQUICIAS;
DELETE FROM CONSULTAS;
DELETE FROM COMPANIAS;
DELETE FROM PATROCINADORES;
DELETE FROM GENEROS;
DELETE FROM USUARIOS;


-----------------------------------------TUPLAS-------------------------------------------------------------------------

----------------------------------------USUARIOS-----------------------------------------------------------------------

-----------------------------La fecha de nacimiento debe ser 10 años menor a la de registro.----------------------
----------------------------La fecha de nacimiento debe ser menor a la de registro------------------------------
ALTER TABLE USUARIOS ADD CONSTRAINT USUARIOS_MAYORES CHECK(FECHAREG-FECHANACI>3650 );

----------------------------------------COMPETENCIAS-------------------------------------------------------------------

------------------------------La fecha de inicio tiene que ser menor a la de finalización.------------------------
ALTER TABLE COMPETENCIAS ADD CONSTRAINT COMPETENCIAS_MAYORES CHECK(INICIO<FECHA_G);

----------------------------------------EQUIPOS------------------------------------------------------------------------

----------------------------------Cuando se ingresa el Coach debe verificarse que el equipo esté activo.--------------------
ALTER TABLE EQUIPOS ADD CONSTRAINT VERIFICACION_ACTIVO CHECK(NOT(ID_COA IS  NOT NULL AND ESTADO='0'));

----------------------------------------DISPARADORES-------------------------------------------------------------------

-----------------------------------USUARIOS----------------------------

--------------La fecha de registro se genera automaticamente------------------------
CREATE OR REPLACE TRIGGER USUARIOS_FECHA
BEFORE INSERT ON USUARIOS
FOR EACH ROW

DECLARE
    FECH DATE;
BEGIN
    SELECT SYSDATE INTO FECH FROM DUAL;
    :NEW.FECHAREG := FECH;
END;
/
--------------Se pueden modificar todos los datos a excepción de la fecha de nacimiento y la fecha de registro.-----------
CREATE OR REPLACE TRIGGER USUARIOS_MODIFICAR_FECHANACI
BEFORE UPDATE OF FECHANACI ON USUARIOS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
CREATE OR REPLACE TRIGGER USUARIOS_MODIFICAR_FECHAREG
BEFORE UPDATE OF FECHAREG ON USUARIOS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
-----------------No se puede eliminar el usuario.-------------------------------------
CREATE OR REPLACE TRIGGER USUARIOS_ELIMINAR_USUARIO
BEFORE DELETE ON USUARIOS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ELIMINAR');
END;
/
----------------------------------------CONSULTAS-------------------------------------------------------

------------------------------El id de consulta es autogenerado----------------------------
--------------------------La fecha de la consulta se genera automaticamente.---------------
CREATE OR REPLACE TRIGGER CONSULTAS_CONSECUTIVO
BEFORE INSERT ON CONSULTAS
FOR EACH ROW

DECLARE
    FECH DATE;
    y NUMBER;
BEGIN
    SELECT COUNT(*) INTO y FROM CONSULTAS;
    SELECT SYSDATE INTO FECH FROM DUAL;
    :NEW.ID:= y+1;
    :NEW.FECHA := FECH;
END;
/
-------------------------No se pueden modificar consultas---------------------------
CREATE OR REPLACE TRIGGER CONSULTAS_MODIFICAR
BEFORE UPDATE ON CONSULTAS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
--------------------------No se pueden eliminar consultas.-------------------------
CREATE OR REPLACE TRIGGER CONSULTAS_ELIMINAR
BEFORE DELETE ON CONSULTAS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ELIMINAR');
END;
/
---------------------------------------------COMPETENCIAS-------------------------------------------------------------------

----------------------------El id de Competencia es autogenerado-----------------------------------

CREATE OR REPLACE TRIGGER COMPETENCIAS_CONSECUTIVO
BEFORE INSERT ON COMPETENCIAS
FOR EACH ROW

DECLARE
    y NUMBER;
BEGIN
    SELECT COUNT(*) INTO y FROM COMPETENCIAS;
    :NEW.ID:= y+1;
END;
/
-----------------------------No se pueden modificar competencias.------------------------------
CREATE OR REPLACE TRIGGER COMPETENCIAS_MODIFICAR
BEFORE UPDATE ON COMPETENCIAS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/

-----------------------------No se pueden eliminar competencias.----------------------------
CREATE OR REPLACE TRIGGER COMPETENCIAS_ELIMINAR
BEFORE DELETE ON COMPETENCIAS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ELIMINAR');
END;
/
--------------------------------------EQUIPOS-----------------------------------

----------------------------la fecha de fundación debe ser menor a la actual.------------------------
CREATE OR REPLACE TRIGGER EQUIPOS_FUNDACION
BEFORE UPDATE ON EQUIPOS
FOR EACH ROW
DECLARE
BEGIN
    IF :NEW.FUNDACION>=SYSDATE THEN
    RAISE_APPLICATION_ERROR(-20001,'FECHA DE FUNDACION NO VALIDA');
    END IF;
END;
/
------------------------------Al adicionar equipo, a la fecha de ingreso del coach se le pone la actual.---------------------------
CREATE OR REPLACE TRIGGER EQUIPOS_INGRESO_COACH
AFTER INSERT ON EQUIPOS
FOR EACH ROW
DECLARE
BEGIN
    UPDATE COACHES SET INGRESO=SYSDATE WHERE :NEW.ID_COA=ID;
END;
/
----------------------------Al modificar el coach se actualiza la fecha de registro a la actual.-------------------------
CREATE OR REPLACE TRIGGER EQUIPOS_MODIFICAR_COACH
AFTER UPDATE OF ID_COA ON EQUIPOS
FOR EACH ROW
DECLARE
BEGIN
    UPDATE COACHES SET INGRESO=SYSDATE WHERE :OLD.ID_COA=ID;
END;
/
/*
Solo se puede:
modificar el nombre del equipo.
modificar la pagina web. 
modificar el patrocinador.
*/
CREATE OR REPLACE TRIGGER EQUIPOS_MODIFICAR_FUNDACION
BEFORE UPDATE OF FUNDACION ON EQUIPOS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
CREATE OR REPLACE TRIGGER EQUIPOS_MODIFICAR_REGION
BEFORE UPDATE OF REGION ON EQUIPOS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
CREATE OR REPLACE TRIGGER EQUIPOS_MODIFICAR_FUNDACION
BEFORE UPDATE OF FUNDACION ON EQUIPOS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
-------------------------No se puede eliminar nada---------------------------------

CREATE OR REPLACE TRIGGER EQUIPOS_ELIMINAR
BEFORE DELETE ON EQUIPOS
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ELIMINAR');
END;
/
----------------------------------------------JUGADORES----------------------------------------------

------------------------------Cuando se ingresa el jugador debe verificarse que sea a un equipo activo.----------------------
CREATE OR REPLACE TRIGGER JUGADORES_EQUIPOACT
BEFORE INSERT ON JUGADORES
FOR EACH ROW
DECLARE
X NUMBER;
BEGIN
    SELECT COUNT(*) INTO X FROM EQUIPOS WHERE :NEW.ID_EQUI=EQUIPOS.NOMBRE AND ESTADO='0';
    IF X>0 THEN
    RAISE_APPLICATION_ERROR(-20001,'NO SE INGRESAR UN JUGADOR EN EQUIPO INACTIVO');
    END IF;
END;
/
--------------------------Cuando se ingresa el jugador debe verificarse que sea a un equipo activo.---------------------------
----------------------------------------La fecha de ingreso es automatizada.---------------------------

CREATE OR REPLACE TRIGGER JUGADORES_CONSECUTIVOFECHA
BEFORE INSERT ON JUGADORES
FOR EACH ROW

DECLARE
    FECH DATE;
    y NUMBER;
    
BEGIN
    SELECT COUNT(*) INTO y FROM JUGADORES;
    SELECT SYSDATE INTO FECH FROM DUAL;
    :NEW.ID:= y+1;
    :NEW.INGRESO := FECH;
END;
/

------------------------Cuando se modifica el nombre del jugador, tambien se modifica el nombre en donde aparezca.-----------------------
CREATE OR REPLACE TRIGGER JUGADORES_ACTNOMBRE
AFTER UPDATE OF APODO ON JUGADORES
FOR EACH ROW

DECLARE
BEGIN
    UPDATE EXJUGADORES SET EXJUGADORES.APODO_JUG=:NEW.APODO WHERE :NEW.ID=ID_JUG;
END;
/
----------------------Cuando se modifica el jugador se guardan las fechas de ingreso y retiro del equipo que salio, ----------------
-----------------------------------------en la fecha de retiro se pone la fecha actual.-----------------------------------------
CREATE OR REPLACE TRIGGER JUGADORES_EX
BEFORE UPDATE 
  OF ID_EQUI
    ON JUGADORES 
FOR EACH ROW
 
DECLARE
 
BEGIN    
    INSERT INTO EXJUGADORES VALUES (:OLD.ID, :OLD.ID_EQUI, :OLD.INGRESO,SYSDATE,:OLD.APODO);
    :NEW.INGRESO := SYSDATE;
END;
/
/*
Se puede modificar el apodo.
Se puede modificar la edad.
Se puede modificar el estado del jugador(Activo/Inactivo).
Se puede modificar la pagina web.
*/
CREATE OR REPLACE TRIGGER JUGADORES_MODIFICAR_ID
BEFORE UPDATE OF ID ON JUGADORES
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
CREATE OR REPLACE TRIGGER JUGADORES_MODIFICAR_INGRESO
BEFORE UPDATE OF INGRESO ON JUGADORES
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
--------------------No se puede eliminar nada---------------------------
CREATE OR REPLACE TRIGGER JUGADORES_ELIMINAR
BEFORE DELETE ON JUGADORES
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ELIMINAR');
END;
/
----------------------------------COACHES---------------------------------------------

-----------------------------------EL id de Coach es autogenerado.-----------------------------------
-----------------------------------La fecha de ingreso del coach es automatizada.-----------------------------------

CREATE OR REPLACE TRIGGER COACHES_CONSECUTIVOFECHA
BEFORE INSERT ON COACHES
FOR EACH ROW

DECLARE
    FECH DATE;
    y NUMBER;
BEGIN
    SELECT COUNT(*) INTO y FROM COACHES;
    SELECT SYSDATE INTO FECH FROM DUAL;
    :NEW.ID:= y+1;
    :NEW.INGRESO := FECH;
END;
/
/*
Se puede modificar el nombre del coach.
Se puede modificar la edad.
Se puede modificar el apodo.
*/
CREATE OR REPLACE TRIGGER COACHES_MODIFICAR_ID
BEFORE UPDATE OF ID ON COACHES
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/

--------------------------No se puede eliminar nada.--------------------------
CREATE OR REPLACE TRIGGER COACHES_ELIMINAR
BEFORE DELETE ON COACHES
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ELIMINAR');
END;
/
-----------------------------------------PATROCINADORES------------------------------------------

-----------------------------El id de Patrocinador se genera automaticamente-------------------
CREATE OR REPLACE TRIGGER PATROCINADORES_CONSECUTIVO
BEFORE INSERT ON PATROCINADORES
FOR EACH ROW

DECLARE
    y NUMBER;
BEGIN
    SELECT COUNT(*) INTO y FROM PATROCINADORES;
    :NEW.ID:= y+1;
END;
/
---------------------------Solo se puede modificar la pagina web y el nombre.--------------------
CREATE OR REPLACE TRIGGER PATROCINADORES_MODIFICAR_ID
BEFORE UPDATE OF ID ON PATROCINADORES
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ACTUALIZAR');
END;
/
--------------------------------No se puede eliminar.---------------------------------
CREATE OR REPLACE TRIGGER PATROCINADORES_ELIMINAR
BEFORE DELETE ON PATROCINADORES
FOR EACH ROW
DECLARE
BEGIN
    RAISE_APPLICATION_ERROR(-20001,'NO SE PUEDE ELIMINAR');
END;
/

----------------------------------------DisparadoresOk-------------------------------

---------------------------------------USUARIOS------------------------------------
--------------La fecha de registro se genera automaticamente------------------------
INSERT INTO USUARIOS (NOMBRE, CORREO, APODO, FECHANACI, APELLIDO, "CONTRASEÑA", FECHAREG) 
VALUES ('Sasha', 'swells0@ebay.com', 'swells0', to_date('11-Apr-2006', 'DD-Mon-RRRR'), 'Wells', 'PBQ5KS', to_date('11-Oct-2019', 'DD-Mon-RRRR'));
INSERT INTO USUARIOS (NOMBRE, CORREO, APODO, FECHANACI, APELLIDO, "CONTRASEÑA", FECHAREG) 
VALUES ('Chiquita', 'cleborgne1@hhs.gov', 'cleborgne1', to_date('03-Jun-2000', 'DD-Mon-RRRR'), 'Leborgne', '7BMK0F1', to_date('12-Oct-2019', 'DD-Mon-RRRR'));

SELECT * FROM USUARIOS;
--------------Se pueden modificar todos los datos a excepción de la fecha de nacimiento y la fecha de registro.-----------
UPDATE USUARIOS SET FECHANACI='03-Jun-2003' WHERE APODO='swells0';
UPDATE USUARIOS SET FECHAREG='03-Jan-2019' WHERE APODO='cleborgne1';
-----------------No se puede eliminar el usuario.-------------------------------------
DELETE FROM USUARIOS WHERE APODO='swells0';
DELETE FROM USUARIOS WHERE APODO='cleborgne1';

-----------------------------------------PATROCINADORES------------------------------------------
-----------------------------El id de Patrocinador se genera automaticamente-------------------
INSERT INTO PATROCINADORES (ID, NOMBRE, WEB) 
VALUES (123, 'Jxoxgeo', 'https://www.Jxoxgeo.com');
INSERT INTO PATROCINADORES (ID, NOMBRE, WEB) 
VALUES (2123, 'Htrmsfr', 'https://www.Htrmsfr.com');

SELECT * FROM PATROCINADORES;
---------------------------Solo se puede modificar la pagina web y el nombre.--------------------
UPDATE PATROCINADORES SET ID=5 WHERE ID=1;
UPDATE PATROCINADORES SET ID=7 WHERE ID=2;
--------------------------------No se puede eliminar.---------------------------------
DELETE FROM PATROCINADORES WHERE ID=1;
DELETE FROM PATROCINADORES WHERE ID=2;


----------------------------------------CONSULTAS-------------------------------------------------------

------------------------------El id de consulta es autogenerado----------------------------
--------------------------La fecha de la consulta se genera automaticamente.---------------
INSERT INTO CONSULTAS (ID, FECHA, APODO) 
VALUES (455, to_date('11-Apr-2006', 'DD-MON-RR'), 'swells0');
INSERT INTO CONSULTAS (ID, FECHA, APODO) 
VALUES (333, to_date('03-Jun-2014', 'DD-MON-RR'), 'cleborgne1');

SELECT * FROM CONSULTAS;

-------------------------No se pueden modificar consultas---------------------------
UPDATE CONSULTAS SET FECHA='11-Dec-2018' WHERE ID=1;
UPDATE CONSULTAS SET FECHA='21-Dec-2018' WHERE ID=2;
--------------------------No se pueden eliminar consultas.-------------------------
DELETE FROM CONSULTAS WHERE ID=1;
DELETE FROM CONSULTAS WHERE ID=2;

----------------------------------COACHES---------------------------------------------

-----------------------------------EL id de Coach es autogenerado.-----------------------------------
-----------------------------------La fecha de ingreso del coach es automatizada.-----------------------------------
INSERT INTO COACHES (ID, NOMBRE, APELLIDO, EDAD, APODO, NACIONALIDAD, INGRESO) 
VALUES (300, 'Audra', 'Gainsford', 32.0, 'againsford0', 'Tanzania', to_date('21-May-2018', 'DD-MON-RRRR'));
INSERT INTO COACHES (ID, NOMBRE, APELLIDO, EDAD, APODO, NACIONALIDAD, INGRESO) 
VALUES (434, 'Daveta', 'Dowman', 18.0, 'ddowman1', 'Portugal', to_date('21-May-2018', 'DD-MON-RRRR'));

SELECT * FROM COACHES;
/*
Se puede modificar el nombre del coach.
Se puede modificar la edad.
Se puede modificar el apodo.
Se puede modifucar la nacionalidad.
*/
UPDATE COACHES SET NOMBRE='CARLOS' WHERE ID=1;
UPDATE COACHES SET NACIONALIDAD ='SoACHA' WHERE ID=2;
UPDATE COACHES SET EDAD =22 WHERE ID=2;
SELECT * FROM COACHES;
--------------------------No se puede eliminar nada.--------------------------
DELETE FROM COACHES WHERE ID=1;
DELETE FROM COACHES WHERE ID=2;
--------------------------------------EQUIPOS-----------------------------------

----------------------------la fecha de fundación debe ser menor a la actual.------------------------
------------------------------Al adicionar equipo, a la fecha de ingreso del coach se le pone la actual.---------------------------
INSERT INTO EQUIPOS (NOMBRE, FUNDACION, REGION, WEB, ID_COA, ESTADO) 
VALUES ('Kacy404', to_date('08-Apr-2008', 'DD-MON-RR'), 'Serbia', 'www.Kacy404.com', 1, '1');

INSERT INTO EQUIPOS (NOMBRE, FUNDACION, REGION, WEB, ID_COA, ESTADO) 
VALUES ('Robert985', to_date('30-Dec-1981', 'DD-MON-RR'), 'Russia', 'www.Robert985.com', 2, '1');

SELECT * FROM EQUIPOS;
SELECT * FROM COACHES;
----------------------------Al modificar el coach se actualiza la fecha de registro a la actual.-------------------------
UPDATE EQUIPOS SET ID_COA=2 WHERE NOMBRE='Kacy404';
UPDATE EQUIPOS SET ID_COA=1 WHERE NOMBRE='Robert985';
SELECT * FROM EQUIPOS;
SELECT * FROM COACHES;
/*
Solo se puede:
modificar el nombre del equipo.
modificar la pagina web. 
modificar el patrocinador.
*/
UPDATE EQUIPOS SET NOMBRE='BARCELONA' WHERE NOMBRE='Kacy404';
UPDATE EQUIPOS SET WEB='WWW.GOOGLE.COM' WHERE NOMBRE='BARCELONA';

SELECT * FROM EQUIPOS;

INSERT INTO PATROCINIOS (ID_PAT, ID_EQUI) 
VALUES (1, 'BARCELONA');

INSERT INTO PATROCINIOS (ID_PAT, ID_EQUI) 
VALUES (2, 'Robert985');

SELECT * FROM PATROCINIOS;

UPDATE PATROCINIOS SET ID_PAT=2 WHERE ID_EQUI='BARCELONA';

SELECT * FROM PATROCINIOS;

-----------------------------No se puede eliminar nada---------------------------------
DELETE FROM EQUIPOS WHERE NOMBRE='BARCELONA';

----------------------------------------------JUGADORES----------------------------------------------

------------------------------Cuando se ingresa el jugador debe verificarse que sea a un equipo activo.----------------------
----------------------------------------La fecha de ingreso es automatizada.---------------------------
INSERT INTO JUGADORES (ID, NOMBRE, APELLIDO, APODO, EDAD, NACIONALIDAD, ACTIVO, ID_EQUI, INGRESO) 
VALUES (1, 'Eldon', 'Wallbrook', 'ewallbrook0', 21, 'China', '1', 'BARCELONA', to_date('21-May-2018', 'DD-MON-RR'));
INSERT INTO JUGADORES (ID, NOMBRE, APELLIDO, APODO, EDAD, NACIONALIDAD, ACTIVO, ID_EQUI, INGRESO) 
VALUES (2, 'Padraic', 'Hubbucke', 'phubbucke1', 21, 'South Africa', '1', 'Robert985', to_date('21-May-2018', 'DD-MON-RR'));

SELECT * FROM JUGADORES;

----------------------Cuando se modifica el jugador se guardan las fechas de ingreso y retiro del equipo que salio, ----------------
-----------------------------------------en la fecha de retiro se pone la fecha actual.-----------------------------------------
UPDATE JUGADORES SET ID_EQUI='BARCELONA' WHERE ID=2;
SELECT * FROM EXJUGADORES;
------------------------Cuando se modifica el APODO del jugador, tambien se modifica el nombre en donde aparezca.-----------------------
---------------------------------Se puede modificar el apodo.-----------------------------------------------------------------------
UPDATE JUGADORES SET APODO='NOOBMASTER69' WHERE ID=2;
SELECT * FROM JUGADORES;
SELECT * FROM EXJUGADORES;
/*
Se puede modificar la edad.
Se puede modificar el estado del jugador(Activo/Inactivo).
*/
UPDATE JUGADORES SET EDAD=25 WHERE ID=1;
UPDATE JUGADORES SET ACTIVO=0 WHERE ID=2;
SELECT * FROM JUGADORES;
--------------------No se puede eliminar nada---------------------------
DELETE FROM JUGADORES WHERE ID=1;

---------------------------------------------COMPETENCIAS-------------------------------------------------------------------
----------------------------El id de Competencia es autogenerado-----------------------------------
INSERT INTO FRANQUICIAS (ID, NOMBRE, FECHA) 
VALUES (1, 'Madden NFL', to_date('11-Apr-2006', 'DD-Mon-RRRR'));

INSERT INTO FRANQUICIAS (ID, NOMBRE, FECHA) 
VALUES (2, 'Call of Duty?', to_date('03-Jun-2014', 'DD-Mon-RRRR'));

INSERT INTO VIDEOJUEGOS (ID, NOMBRE, CLASIFICACION, LANZAMIENTO, ID_FRAN) 
VALUES (1, 'Alpha', 'C', to_date('11-Apr-2006', 'DD-Mon-RRRR'), 1);

INSERT INTO VIDEOJUEGOS (ID, NOMBRE, CLASIFICACION, LANZAMIENTO, ID_FRAN) 
VALUES (2, 'Fix San', 'M', to_date('03-Jun-2014', 'DD-Mon-RRRR'), 2);

INSERT INTO COMPETENCIAS (ID, LUGAR, INICIO, REGION, NOMBRE, FECHA_G, ID_VID, ID_EQUI) 
VALUES (88, '0 Merry Avenue', to_date('11-Apr-2006', 'DD-MON-RRRR'), 'Peru', 'Bronze Booster BB Cream', to_date('11-Apr-2016', 'DD-MON-RRRR'), 1, 'BARCELONA');

INSERT INTO COMPETENCIAS (ID, LUGAR, INICIO, REGION, NOMBRE, FECHA_G, ID_VID, ID_EQUI) 
VALUES (156, '71 Luster Place', to_date('03-Jun-2014', 'DD-MON-RRRR'), 'Czech Republic', 'nanocare', to_date('03-Jun-2015', 'DD-MON-RRRR'), 2, 'Robert985');

SELECT * FROM COMPETENCIAS;
-----------------------------No se pueden modificar competencias.------------------------------
UPDATE COMPETENCIAS SET REGION='COLOMBIA' WHERE ID=1;
-----------------------------No se pueden eliminar competencias.----------------------------
DELETE FROM COMPETENCIAS WHERE ID=1;













